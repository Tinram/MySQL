#!/usr/bin/env php
<?php

/**
    * Aggregate transaction data (and process convoluted whitespace in SQL output) from CSV logfile generated by mysqltrxmon.
    *
    * Usage:
    *        php trx_aggregator.php <input_filename> [trxsplit | output_filename]
    *
    * @author         Martin Latter
    * @copyright      Martin Latter 24/10/2022
    * @version        0.03
    * @license        GNU GPL version 3.0 (GPL v3); http://www.gnu.org/licenses/gpl.html
    * @link           https://github.com/Tinram/MySQL.git
*/


declare(strict_types=1);

define('DUB_EOL', PHP_EOL . PHP_EOL);

$sSeparator = '|';
$sFirstField = 'trx';

$sUsage =
    PHP_EOL . ' ' . basename(__FILE__, '.php') .
    DUB_EOL . "\tusage: php " . basename(__FILE__) . ' <input_filename> [trxsplit | output_filename]' . DUB_EOL;

if ( ! isset($_SERVER['argv'][1]))
{
    echo PHP_EOL . ' missing input file.' . PHP_EOL;
    die($sUsage);
}

$sFilename = $_SERVER['argv'][1];
$sOutputFilename = null;
$bTrxSplit = false;

if (isset($_SERVER['argv'][2]))
{
    if ($_SERVER['argv'][2] === 'trxsplit')
    {
        $bTrxSplit = true;
    }
    else
    {
        $sOutputFilename = $_SERVER['argv'][2];
    }
}

if (( ! is_file($sFilename)) || ( ! file_exists($sFilename)))
{
    die('The file ' . $sFilename . ' does not exist!' . PHP_EOL);
}

$sFileContents = file_get_contents($sFilename);

if ($sFileContents === false)
{
    die('The file ' . $sFilename . ' could not be loaded!' . PHP_EOL);
}

$rFile = fopen($sFilename, 'r');
$aResults = [];
$sHeader = '';
$sOutputContents = '';
$iTrxCount = 0;

while (($aLine = fgetcsv($rFile, 4096, $sSeparator)) !== false)
{
    if ( ! is_numeric($aLine[0]))
    {
        if ($aLine[0] === $sFirstField)
        {
            $sHeader = join($sSeparator, $aLine);
        }

        continue;
    }

    $k = (int) $aLine[0];
    $aResults[$k][] = $aLine;
}

fclose($rFile);

/* Set dump to stdout (pipe to less etc) or file. */
$bToStdout = ($sOutputFilename === null) ? true : false;

if ($bToStdout)
{
    echo $sHeader . PHP_EOL;
}
else
{
    $sOutputContents .= $sHeader . PHP_EOL;
}

foreach ($aResults as $iTrx => $aTrxs)
{
    if ($bTrxSplit === true)
    {
        echo DUB_EOL;
        echo $sHeader . PHP_EOL;
        $iTrxCount++;
    }

    foreach ($aTrxs as $aTrx)
    {
        $aTmp = [];

        foreach ($aTrx as $sField)
        {
            $aTmp[] = $sField;
        }

        if ($bToStdout)
        {
            echo join($sSeparator, $aTmp) . PHP_EOL;
        }
        else
        {
            $sOutputContents .= join($sSeparator, $aTmp) . PHP_EOL;
        }
    }
}

if ($bTrxSplit === true)
{
    echo DUB_EOL . $iTrxCount . ' trx' . PHP_EOL;
}

/* Dump to file. */
if ( ! $bToStdout)
{
    $iOutput = file_put_contents($sOutputFilename, $sOutputContents);

    if ($iOutput === false)
    {
        die($sOutputFilename . ' could not be saved.' . PHP_EOL);
    }
    else
    {
        echo $sOutputFilename . ' created.' . PHP_EOL;
    }
}
