#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
    Transaction Aggregator
    Aggregate overlapping transaction data from CSV logfile generated by mysqltrxmon.

    Author         Martin Latter
    Copyright      Martin Latter 16/08/2022
    Version        0.02
    License        GNU GPL version 3.0 (GPL v3); https://www.gnu.org/licenses/gpl-3.0.html
    Link           https://github.com/Tinram/MySQL.git
"""


import argparse
import csv
import sys
from itertools import groupby
from operator import itemgetter


PARSER = argparse.ArgumentParser()
PARSER.add_argument(
    '-f', '--file',
    dest='filename',
    help='CSV file to process',
    default='',
    type=str,
    action='store'
)

ARGS = PARSER.parse_args()
if ARGS.filename == '':
    print('\nFile error: missing filename.\nUsage: ' + sys.argv[0] + ' -f <filename>\n')
    sys.exit(1)


TRXS = []

with open(ARGS.filename, encoding='utf-8', mode='r') as f:
    READER = csv.DictReader(f, delimiter='|')
    for row in READER:
        TRXS.append(row)


# CSV: trx|thd|ps|exm|lock|mod|afft|tmpd|tlock|noidx|wait|start|secs|user|trxstate|trxopstate|query

# sort by trx id
TRXS = sorted(TRXS, key=itemgetter('trx'))

# group by trx id, thanks/credit to geeksforgeeks.org
for trx_id, stats in groupby(TRXS, key=itemgetter('trx')):

    print('TRX: ' + trx_id)

    print(
        'thd\t' +
        'ps\t\t' +
        'exm\t\t' +
        'tlk\t' +
        'idx\t' +
        'start\t\t\t' +
        'wait\t' +
        'secs\t' +
        'user'
    )

    for stat in stats:

        print(
            stat['thd'] + '\t' +
            stat['ps'] + '\t\t' +
            stat['exm'] + '\t\t' +
            stat['tlock'] + '\t' +
            stat['noidx'] +'\t' +
            stat['start'] + '\t' +
            stat['wait'] + '\t' +
            stat['secs'] + '\t' +
            stat['user'] + '\t' +
            stat['trxstate'] + '\t\t' +
            stat['trxopstate'] + '\t'
        )

    print('\n')
